= APIfier votre système d'information : l'API management ne vous sauvera pas

Problème n°1 qui préoccupe beaucoup de grandes entreprises : APIfier leur système d'information.

L'angle qu'elles préfèrent choisir pour répondre à ce problème : choisir une plateforme d'API management.

Les grandes entreprises ont déjà des systèmes d'informations très structurés qui reflètent fortement la manière dont ils ont été construits. L'objectif d'une APIfication réussie est de se reposer au maximum sur l'existant cœur de métier en se concentrant sur les couches d'exposition.

Si l'objectif n'est pas seulement de mieux fournir des services mais aussi de s'ouvrir à de nouveaux types de clients qui vont augmenter largement la volumétrie des appels, il est beaucoup plus probable que le cœur de métier soit touché.
Dans ce cas il peut être pertinent de commencer par cadrer cette partie pour savoir où vous allez, pour par exemple vérifier si votre mainframe historique est bien compatible avec la montée charge prévue, ou s'il faut d'abord prévoir de le migrer.

Dans notre expérience, les sujets à traiter pour APIfier un tel système sont les suivants :
- Ne plus voir les services seulement comme un moyen technique mais comme un produit
- Définir une offre cohérente de services pour ne pas se borner à vouloir simplement exposer le maximum de fonctionnalités
- Designer et mettre en œuvre des services faciles à utiliser et ayant la bonne granularité, ce qui peut vouloir dire repenser son mode de conception pour passer d'un mode RPC (SOAP) à un mode ressource (REST)
- Commencer à rendre composable son SI pour pouvoir plus facilement adresser de nouveaux besoins, pour que la v2 de l'API ne soit pas l'occasion d'un nouveau big-bang
- Avoir des métriques et du monitoring sur les services

Les fonctionnalités des plateformes d'API management :
- portail développeur : enrôlement, documentation des services et console interactive
- quotas, monitoring et métriques
- authentification et habilitations (en direct ou s'appuyant sur une brique existante)
- des transformation techniques limitées sur les services

On voit que les plateformes d'API management n'adressent que le sujet le plus facile car c'est celui qui demande une solution technique.

Il est tentant de penser que les fonctionnalités de transformation techniques d'un outil d'API management vont permettre de bâtir une API au dessus d'une couche de service existant, mais ne vous y trompez pas !
Un outil d'API management va être capable de changer des noms de paramètres dans des appels mais ne sera pas capable de transformer vos services, ainsi un service à gros grains ne peut pas être magiquement transformé en service unitaire.

Ne reproduisez pas l'erreur de ceux qu'il y a 10 ans pensaient que les outils d'ESB suffiraient à résoudre leurs problèmes d'urbanisation et qu'ils couperaient au besoin de changer leurs méthodes de travail.

Pour exposer une API, le seul moyen sera bien de lancer de nouveaux projets.

Pour APIfier, les fonctionnalités fournies par l'API management sont nécessaires. Qu'elles soient fournies par une solution sur l'étagère ou par un développement ou une intégration de produit custom.

Il faut donc :
- réfléchir à son métier pour définir une stratégie d'offre de service cohérente, et non faire de l'UML avec des architectes fonctionnels ça ne compte pas
- définir une politique de service avec un vocabulaire commun
- transformer la manière de faire des projets pour qu'ils apprennent à communiquer entre eux
- apprendre à mieux travailler avec ses consommateurs de services internes et externes pour faire des services adaptés et composables plutôt que du one shot et du sur-design

Même si la transformation est profonde, évitez de vouloir trop vous préparer avant de sauter le pas en vous lançant dans un plan global de réurbanisation afin de définir une API complète du sol au plafond sans toucher à une ligne de code.

Il faut que le métier identifie une opportunité nécessitant la création d'une API très limitée.
Pour cette API Il faut choisir un périmètre étroit :
- dans un domaine métier que vous connaissez, car s'appuyer sur cette connaissance simplifie la conception des service (rien de plus périlleux que de définir des services à l'aveugle alors qu'on ne sait pas comment ils vont être utilisés)
- qui intéresse le plus grand nombre possible de types de consommateurs, et les impliquer dans le design, afin d'augmenter les chances d'aboutir à une API générique.

Ensuite déroulez ce MVP jusqu'en production en s'appuyant sur les méthodes agiles.
Cela permettra de valider votre approche, et la plateforme d'API management.
Une foi cette étape franchie, enrichissez peu à peu ce noyau d'API de manière opportuniste et itérative.

Si mettre en place une solution d'API management sur des services existants vous permet de répondre à des besoins non satisfaits (typiquement le monitoring), il peut être pertinent de mettre en place une solution dès à présent, mais ayez bien deux choses à l'esprit :
- cela veut dire choisir une solution avec une partie seulement des besoins
- mettre une solution d'API management devant des services ne les transforme pas en API
