[#MDT-3]
ifeval::["{doctype}" == "book"]
= Partie 3 : le début de la persistance
endif::[]
ifeval::["{doctype}" != "book"]
= Écrire un moteur de tâches en Ruby partie 3 : le début de la persistance
endif::[]
:author: Julien Kirch
:revnumber: v0.1
:revdate: 2020-07-12
:article_lang: fr
:article_description: L'importance d'être transactionnel
:article_image: steampunk.jpg
ifndef::source-highlighter[]
:source-highlighter: pygments
:pygments-style: friendly
endif::[]
:mdt: moteur de tâches
:msdt: moteurs de tâches

ifeval::["{doctype}" != "book"]
Ceci est le troisième article d'une série de XXX décrivant pas à pas comment écrire un {mdt} en Ruby.

Après link:../moteur-de-taches-en-ruby-1-introduction[avoir introduit le sujet], link:../moteur-de-taches-en-ruby-2-boucle-de-traitement[construit la base de la boucle de traitement] et je vais maintenant m'intéresser à la persistance.
endif::[]

== Quoi et comment stocker{nbsp}?

Un {mdt}


Le stockage des données utilisera PostgreSQL car le fonctionnement des transactions des bases de données SQL sera utile pour gérer la parallélisation, et que PostgreSQL fournit un certain nombre de fonctionnalités bien pratiques pour implémenter un {mdt}.


[source,bash]
----
$ createuser task_engine
$ createdb --owner=task_engine task_engine
----

.task_engine.rb
[source,ruby]
----
include::task_engine.rb[]
----

.Rakefile
[source,ruby]
----
include::Rakefile[]
----

[source,bash]
----
include::start_engine.txt[]
----