= D√©couplage, silotage et compatibilit√©
Julien Kirch
v1.0, 2019-06-17

Je parle ici de d√©couplage entre application d'un SI

== D√©couplage

La mani√®re la plus simple dont deux applications sont d√©coupl√©es c'est lorsqu'elles n'ont pas de lien entre elles.
C'est le cas id√©al mais malheureusement pour nous ce n'est pas toujours souhaitable.

Lorsqu'il y a un lien entre deux applications, d√©couplage, √ßa peut vouloir dire deux choses :

* en tant que client d'une application (que j'utilise un service qu'elle expose ou que je consomme une donn√©e qu'elle fournit), je ne veux pas subir de cons√©quence lorsque cette application est modifi√©e ;
* en tant que fournisseur d'une application (que j'expose un service qu'elle utilise ou que je fournit une donn√©e qu'elle consomme), je veut pouvoir faire des mises √† jour dans subir de cons√©quence.

== Pourquoi est ce qu'on n'aime pas le couplage ?

Du point de vue des √©quipes qui maintiennent les applications, un couplage demande de se synchronizer, et notamment de s'int√©resser aux autres et donc augmente les efforts √† fournir

== üíïle couplage

Le couplage est une cons√©quence du lien qu'il existe entre deux applications, par exemple donner acc√®s √† une donn√©e ou √† un service, or ce lien apporte de la valeur.

Avoir des applications coupl√©es n'est donc pas en soi une mauvaise chose.

Des applications trop d√©coupl√©es, o√π les informations et les services sont insuffisamment partag√©es, cela s'appelle des silos.

Un syst√®me "`compl√®tement d√©coupl√©`" comme je l'ai entendu plusieurs fois, cela voudrait dire un syst√®me compl√®tement silot√©, o√π aucun lien n'existe entre les diff√©rentes briques

Les b√©n√©fices du couplage en terme de fonctionnalit√©s ajout√©es sont donc contrebalanc√©s par les d√©savantage en terme de maintenance.

L'objectif n'est donc pas de ne pas coupler, mais de

* coupler l√† o√π c'est pertinent, c'est-√†-dire l√† o√π le lien apporte une valeur sup√©rieure au co√ªt de la maintenance
* coupler de la bonne mani√®re, c'est-√†-dire d'une mani√®re qui a le moins de d√©savantage possible

== D√©couplage et couplage faible

S'il y a un lien entre deux applications A et B, et que A √©volue, deux possibilit√©s{nbsp}:
- le lien entre A et B doit √©voluer aussi pour pouvoir faire profiter √† B des √©volutions, ou pour supprimer quelque chose qui n'a plus lieu d'√™tre
- le lien ne doit pas √©voluer, et il faut s'en assurer, c'est √† dire valider la compatibilit√© 

=> D√®s qu'il y a un lien entre deux application, il y a un couplage, m√™me faible

== Couplage avec le SI plut√¥t que par application

En g√©n√©ral, un couplage entre deux applications n'est pas un probl√®me en soi.

Je dis en g√©n√©ral, car si dans votre syst√®me deux applications partagent une m√™me base de donn√©e dont le mod√®le de donn√©e √©volue r√©guli√®rement, vous pourrait √™tre un probl√®me en soi.

Mais en g√©n√©ral, le probl√®me et donc les questions √† se poser se situent quand on consid√®re le niveau de couplage globale entre une application A et le reste du syst√®me, c'est √† dire la cons√©quence de l'ensemble des couplages dans lesquels intervient A.

WIP

== Conclusion