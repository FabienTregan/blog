= Links - Soon
Julien Kirch
v1.0, 2020-01-01
:article_lang: en
:figure-caption!:

== link:https://www.kateheddleston.com/blog/the-null-process[The Null Process]

[quote]
____
A null process -- which takes its name from the concept of null pointers -- is what happens when no formal process is put in place. A pointer in computer programming is an object that points to a location in computer memory with meaningful information; it could point to a number, a letter, or even another pointer. A null pointer "`points definitively nowhere`". A null pointer is an apt analogy because while it points nowhere, you still have the pointer object which, if used incorrectly, can crash your program. 

When people say they don't want process, what they're really saying is they don't want _formalized_ process. There is really no such thing as "`no process`". A process is simply the steps it takes to complete a task, so if a task is completed then by definition a process was used. Without formalized process everyone does things their own way, and there is no documentation for how problems are solved. This informal, undocumented process is the "`null process`", and, if used incorrectly, the null process can have major implications for a company.
____

[quote]
____
The biggest danger with a null process is that it creates an environment of unspoken expectations. Most of the time, people have expectations about how a task should be completed. In the introductory story, when my coworker was responding to support tickets it became clear that there was an expected way that he should complete the task. His boss intervened to correct what he was doing, yet my coworker and the rest of the team was unaware that there was an expected way to respond to support tickets. 

Managing with unspoken expectations is dangerous. How can employees perform to a manager's standards if they don't know what's expected of them? Saying these expectations out loud in a one-off situation means that some people might know what's expected and others don't. How can you compare the job performance between employees who know the unspoken processes and those who don't? Additionally, the more time an employee spends getting their boss to tell them all the unspoken processes for their job, the more likely they are to be successful at the company. But that seems like an inefficient use of the employee and the manager's time. 

A lot of companies end up with null process because they're afraid of bad process. There is this myth that having no process is liberating and that it frees people up to solve problems the best way possible. While that might be true on a very small, flexible, early-stage team, as a company grows the null process quickly becomes a hindrance. Undocumented process is extremely difficult to teach to new employees, making onboarding and team growth more expensive. The null process can easily transform into unspoken expectations that things are done a certain way, even though the company has not documented the implicitly understood process for completing a task. As Jo Freeman says in her famous essay _The Tyranny of Structurelessness_, "`For everyone to have the opportunity to be involved in a given group and to participate in its activities the structure must be explicit, not implicit`". By relying on implicit processes, companies are creating environments with unspoken expectations that can make it difficult for employees to succeed at their jobs.
____